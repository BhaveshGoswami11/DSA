class Solution {
    public int findDays(int[] nums, int d){
        int days=1, load=0;
        for(int i=0;i<nums.length;i++){
                 if(nums[i]+load>d){
                    days+=1;
                    load=nums[i];
                 } else {
                  load+=nums[i];
               }
        }
         return days;

    }
    public int shipWithinDays(int[] weights, int days) {
        int max=Integer.MIN_VALUE, sum=0;
        for(int i=0;i<weights.length;i++){
            max=Math.max(max, weights[i]);
            sum+=weights[i];
        } int low=max, high=sum, ans=max;
        while(low<=high){
            int mid=low+(high-low)/2;
            int numDay= findDays(weights, mid);
            if(numDay<=days){
                high=mid-1;

            } else {
                low=mid+1;
            }

        } return low;
    }
}